https://app.codesignal.com/challenge/GMkfrHjyKvf2yjhy8

We call an element of an array its peak if the array is strictly
increasing on the left side of the peak and strictly decreasing on its right side.
So if we have an array called sequence of length n, sequence[k] is a peak if and only if

sequence[0] < sequence[1] < ... < sequence[k]
and
sequence[k] > sequence[k + 1] > ... > sequence[n - 1]
Knowing that sequence definitely has a peak and that the peak is not its first or last element, find the peak's value.

Example
For sequence = [1, 2, 4, 7, 9, 3, -2, -10], the output should be
sequencePeakElement(sequence) = 9.


int sequencePeakElement(int[] s) {

    int peak = 0;
    for (int i = 1; i < s.length -1; i ++){
        if (s[i] > s[i-1] && s[i] > s[i+1]){
            peak = s[i];
            break;
        }
    }
    return peak;
}
