https://app.codesignal.com/challenge/fgc6Y28ctPHWsNE3h

You are given two strings s and t of the same length, consisting of uppercase English letters.
Your task is to find the minimum number of "replacement operations" needed to get some anagram of the string t from the string s. A replacement operation is performed by picking exactly one character from the string s and replacing it by some other character.

Example
For s = "AABAA" and t = "BBAAA", the output should be
createAnagram(s, t) = 1;
For s = "OVGHK" and t = "RPGUC", the output should be
createAnagram(s, t) = 4.


int createAnagram(String s, String t) {
    int[] map = new int[52];
    char c;
    int count = 0;
        
    for (int i = 0; i < s.length(); i++){
        c = s.charAt(i);
        if (Character.isLowerCase(c)== true)
            map[c-'a']++;
        else
            map[c-'A'+26]++;
            
            c = t.charAt(i);
            if (Character.isLowerCase(c)== true)
            map[c-'a']--;
        else
            map[c-'A'+26]--;
    }
    for (int i : map)
        count += Math.abs(i);    
    return count/2;
 }
